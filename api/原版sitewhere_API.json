{
  "openapi": "3.0.0",
  "info": {
    "description": "Operations that allow remote clients to interact with the core SiteWhere data model.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "2.0.0",
    "title": "SiteWhere REST APIs",
    "termsOfService": "http://www.sitewhere.com",
    "license": {
      "name": "Common Public Attribution License Version 1.0 (CPAL-1.0)",
      "url": "https://github.com/sitewhere/sitewhere/blob/master/LICENSE.txt"
    },
    "x-logo": {
      "altText": "SiteWhere API",
      "backgroundColor": "#FFFFFF",
      "url": "../images/logo.svg"
    }
  },
  "tags": [
    {
      "name": "area-types",
      "description": "Area Types"
    },
    {
      "name": "areas",
      "description": "Areas"
    },
    {
      "name": "asset-types",
      "description": "Asset Types"
    },
    {
      "name": "assets",
      "description": "Assets"
    },
    {
      "name": "assignments",
      "description": "Assignments"
    },
    {
      "name": "authorities",
      "description": "Authorities"
    },
    {
      "name": "batch-operations",
      "description": "Batch Operations"
    },
    {
      "name": "command-invocations",
      "description": "Command Invocations"
    },
    {
      "name": "customer-types",
      "description": "Customer Types"
    },
    {
      "name": "customers",
      "description": "Customers"
    },
    {
      "name": "device-commands",
      "description": "Device Commands"
    },
    {
      "name": "device-events",
      "description": "Device Events"
    },
    {
      "name": "device-groups",
      "description": "Device Groups"
    },
    {
      "name": "device-states",
      "description": "Device States"
    },
    {
      "name": "device-statuses",
      "description": "Device Statuses"
    },
    {
      "name": "device-types",
      "description": "Device Types"
    },
    {
      "name": "devices",
      "description": "Devices"
    },
    {
      "name": "external-search",
      "description": "External Search"
    },
    {
      "name": "instance",
      "description": "Instance"
    },
    {
      "name": "scheduled-jobs",
      "description": "Scheduled Jobs"
    },
    {
      "name": "schedules",
      "description": "Schedules"
    },
    {
      "name": "system",
      "description": "System"
    },
    {
      "name": "tenants",
      "description": "Tenants"
    },
    {
      "name": "users",
      "description": "Users"
    },
    {
      "name": "zones",
      "description": "Zones"
    }
  ],
  "paths": {
    "/areas": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List areas matching criteria",
        "operationId": "listAreasUsingGET",
        "parameters": [
          {
            "name": "areaTypeToken",
            "in": "query",
            "description": "Limit by area type token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAreaType",
            "in": "query",
            "description": "Include area type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAssignments",
            "in": "query",
            "description": "Include assignments",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeZones",
            "in": "query",
            "description": "Include zones",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "parentAreaToken",
            "in": "query",
            "description": "Limit by parent area token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rootOnly",
            "in": "query",
            "description": "Limit to root elements",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IArea»",
                  "$ref": "#/components/schemas/ISearchResults_IArea_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "areas"
        ],
        "summary": "Create new area",
        "operationId": "createAreaUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IArea",
                  "$ref": "#/components/schemas/IArea"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "AreaCreateRequest",
                "$ref": "#/components/schemas/AreaCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/areas/{areaToken}": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "Get area by token",
        "operationId": "getAreaByTokenUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAreaType",
            "in": "query",
            "description": "Include area type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeParentArea",
            "in": "query",
            "description": "Include parent area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IArea",
                  "$ref": "#/components/schemas/IArea"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "areas"
        ],
        "summary": "Update existing area",
        "operationId": "updateAreaUsingPUT",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IArea",
                  "$ref": "#/components/schemas/IArea"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "AreaCreateRequest",
                "$ref": "#/components/schemas/AreaCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "areas"
        ],
        "summary": "Delete area by token",
        "operationId": "deleteAreaUsingDELETE",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IArea",
                  "$ref": "#/components/schemas/IArea"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/alerts": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List alerts for an area",
        "operationId": "listDeviceAlertsForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAlert»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAlert_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/assignments": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List device assignments for an area",
        "operationId": "listAssignmentsForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit results to the given status",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«DeviceAssignment»",
                  "$ref": "#/components/schemas/ISearchResults_DeviceAssignment_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/invocations": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List command invocations for an area",
        "operationId": "listDeviceCommandInvocationsForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandInvocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandInvocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "Get label for area",
        "operationId": "getAreaLabelUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/locations": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List locations for an area",
        "operationId": "listDeviceLocationsForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceLocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceLocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/measurements": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List measurements for an area",
        "operationId": "listDeviceMeasurementsForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceMeasurement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceMeasurement_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/responses": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List command responses for an area",
        "operationId": "listDeviceCommandResponsesForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandResponse»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areas/{areaToken}/statechanges": {
      "get": {
        "tags": [
          "areas"
        ],
        "summary": "List state changes associated with an area",
        "operationId": "listDeviceStateChangesForAreaUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "path",
            "description": "Token that identifies area",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStateChange»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStateChange_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areatypes": {
      "get": {
        "tags": [
          "area-types"
        ],
        "summary": "List area types matching criteria",
        "operationId": "listAreaTypesUsingGET",
        "parameters": [
          {
            "name": "includeContainedAreaTypes",
            "in": "query",
            "description": "Include contained area types",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IAreaType»",
                  "$ref": "#/components/schemas/ISearchResults_IAreaType_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "area-types"
        ],
        "summary": "Create new area type",
        "operationId": "createAreaTypeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAreaType",
                  "$ref": "#/components/schemas/IAreaType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "AreaTypeCreateRequest",
                "$ref": "#/components/schemas/AreaTypeCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/areatypes/{areaTypeToken}": {
      "get": {
        "tags": [
          "area-types"
        ],
        "summary": "Get area type by token",
        "operationId": "getAreaTypeByTokenUsingGET",
        "parameters": [
          {
            "name": "areaTypeToken",
            "in": "path",
            "description": "Token that identifies area type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAreaType",
                  "$ref": "#/components/schemas/IAreaType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "area-types"
        ],
        "summary": "Update existing area type",
        "operationId": "updateAreaTypeUsingPUT",
        "parameters": [
          {
            "name": "areaTypeToken",
            "in": "path",
            "description": "Token that identifies area type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAreaType",
                  "$ref": "#/components/schemas/IAreaType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "AreaTypeCreateRequest",
                "$ref": "#/components/schemas/AreaTypeCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "area-types"
        ],
        "summary": "Delete area type by token",
        "operationId": "deleteAreaTypeUsingDELETE",
        "parameters": [
          {
            "name": "areaTypeToken",
            "in": "path",
            "description": "Token that identifies area type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAreaType",
                  "$ref": "#/components/schemas/IAreaType"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/areatypes/{areaTypeToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "area-types"
        ],
        "summary": "Get label for area type",
        "operationId": "getAreaTypeLabelUsingGET",
        "parameters": [
          {
            "name": "areaTypeToken",
            "in": "path",
            "description": "Token that identifies area type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assets": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "List assets matching criteria",
        "operationId": "listAssetsUsingGET",
        "parameters": [
          {
            "name": "assetTypeToken",
            "in": "query",
            "description": "Limit by asset type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAssetType",
            "in": "query",
            "description": "Include asset type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IAsset»",
                  "$ref": "#/components/schemas/ISearchResults_IAsset_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assets"
        ],
        "summary": "Create a new asset",
        "operationId": "createAssetUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAsset",
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/AssetCreateRequest"
        }
      }
    },
    "/assets/{assetToken}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get asset by token",
        "operationId": "getAssetByTokenUsingGET",
        "parameters": [
          {
            "name": "assetToken",
            "in": "path",
            "description": "Asset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAsset",
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "assets"
        ],
        "summary": "Update an existing hardware asset in category",
        "operationId": "updateAssetUsingPUT",
        "parameters": [
          {
            "name": "assetToken",
            "in": "path",
            "description": "Asset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAsset",
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/AssetCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "assets"
        ],
        "summary": "Delete asset by token",
        "operationId": "deleteAssetUsingDELETE_1",
        "parameters": [
          {
            "name": "assetToken",
            "in": "path",
            "description": "Asset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAsset",
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assets/{assetToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get label for area",
        "operationId": "getAssetLabelUsingGET",
        "parameters": [
          {
            "name": "assetToken",
            "in": "path",
            "description": "Asset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assettypes": {
      "get": {
        "tags": [
          "asset-types"
        ],
        "summary": "List asset types matching criteria",
        "operationId": "listAssetTypesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IAssetType»",
                  "$ref": "#/components/schemas/ISearchResults_IAssetType_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "asset-types"
        ],
        "summary": "Create a new asset type",
        "operationId": "createAssetTypeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAssetType",
                  "$ref": "#/components/schemas/IAssetType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/AssetTypeCreateRequest"
        }
      }
    },
    "/assettypes/{assetTypeToken}": {
      "get": {
        "tags": [
          "asset-types"
        ],
        "summary": "Get asset by token",
        "operationId": "getAssetTypeByTokenUsingGET",
        "parameters": [
          {
            "name": "assetTypeToken",
            "in": "path",
            "description": "Asset type token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAssetType",
                  "$ref": "#/components/schemas/IAssetType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "asset-types"
        ],
        "summary": "Update an existing hardware asset in category",
        "operationId": "updateAssetTypeUsingPUT",
        "parameters": [
          {
            "name": "assetTypeToken",
            "in": "path",
            "description": "Asset type token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAssetType",
                  "$ref": "#/components/schemas/IAssetType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/AssetTypeCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "asset-types"
        ],
        "summary": "Delete asset type by token",
        "operationId": "deleteAssetUsingDELETE",
        "parameters": [
          {
            "name": "assetTypeToken",
            "in": "path",
            "description": "Asset type token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IAssetType",
                  "$ref": "#/components/schemas/IAssetType"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assettypes/{assetTypeToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "asset-types"
        ],
        "summary": "Get label for area",
        "operationId": "getAssignmentLabelUsingGET",
        "parameters": [
          {
            "name": "assetTypeToken",
            "in": "path",
            "description": "Asset type token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List assignments matching criteria",
        "operationId": "listAssignmentsUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "query",
            "description": "Limit by area token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetToken",
            "in": "query",
            "description": "Limit by asset token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerToken",
            "in": "query",
            "description": "Limit by customer token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceToken",
            "in": "query",
            "description": "Limit by device token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAssignment»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAssignment_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create a new device assignment",
        "operationId": "createDeviceAssignmentUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentCreateRequest"
        }
      }
    },
    "/assignments/bulk/alerts": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List alert events for device assignment",
        "operationId": "listAlertsForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAlert»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAlert_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/invocations": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List command invocation events for assignment",
        "operationId": "listCommandInvocationsForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCommand",
            "in": "query",
            "description": "Include command information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandInvocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandInvocation_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/locations": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List location events for device assignment",
        "operationId": "listLocationsForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceLocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceLocation_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/measurements": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List measurement events for multiple assignments",
        "operationId": "listMeasurementsForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceMeasurement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceMeasurement_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/measurements/series": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List measurements for multiple assignments as chart series",
        "operationId": "listMeasurementsForAssignmentsAsChartSeriesUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementIds",
            "in": "query",
            "description": "Measurement Ids",
            "required": false,
            "allowEmptyValue": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "originalRef": "IChartSeries«double»",
                      "$ref": "#/components/schemas/IChartSeries_double_"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/responses": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List command response events for assignment",
        "operationId": "listCommandResponsesForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandResponse»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandResponse_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/bulk/statechanges": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "List state change events for a device assignment",
        "operationId": "listStateChangesForAssignmentsUsingPOST",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStateChange»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStateChange_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentBulkRequest"
        }
      }
    },
    "/assignments/{token}": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get device assignment by token",
        "operationId": "getDeviceAssignmentUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "assignments"
        ],
        "summary": "Update an existing device assignment",
        "operationId": "updateDeviceAssignmentUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceAssignmentCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Delete an existing device assignment",
        "operationId": "deleteDeviceAssignmentUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments/{token}/alerts": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List alert events for device assignment",
        "operationId": "listAlertsForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAlert»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAlert_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create alert event for device assignment",
        "operationId": "createAlertUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceAlert",
                  "$ref": "#/components/schemas/IDeviceAlert"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceAlertCreateRequest",
                "$ref": "#/components/schemas/DeviceAlertCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/assignments/{token}/end": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Release an active device assignment",
        "operationId": "endDeviceAssignmentUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments/{token}/invocations": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List command invocation events for assignment",
        "operationId": "listCommandInvocationsForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCommand",
            "in": "query",
            "description": "Include command information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandInvocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandInvocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create command invocation event for assignment",
        "operationId": "createCommandInvocationUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommandInvocation",
                  "$ref": "#/components/schemas/IDeviceCommandInvocation"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCommandInvocationCreateRequest"
        }
      }
    },
    "/assignments/{token}/invocations/schedules/{scheduleToken}": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Schedule command invocation",
        "operationId": "scheduleCommandInvocationUsingPOST",
        "parameters": [
          {
            "name": "scheduleToken",
            "in": "path",
            "description": "Schedule token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScheduledJob",
                  "$ref": "#/components/schemas/IScheduledJob"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCommandInvocationCreateRequest"
        }
      }
    },
    "/assignments/{token}/label/{generatorId}": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get label for area",
        "operationId": "getAssignmentLabelUsingGET_1",
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments/{token}/locations": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List location events for device assignment",
        "operationId": "listLocationsForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceLocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceLocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create location event for device assignment",
        "operationId": "createLocationUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceLocation",
                  "$ref": "#/components/schemas/IDeviceLocation"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceLocationCreateRequest",
                "$ref": "#/components/schemas/DeviceLocationCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/assignments/{token}/measurements": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List measurement events for device assignment",
        "operationId": "listMeasurementsForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceMeasurement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceMeasurement_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create measurements event for device assignment",
        "operationId": "createMeasurementsUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceMeasurement",
                  "$ref": "#/components/schemas/IDeviceMeasurement"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceMeasurementCreateRequest",
                "$ref": "#/components/schemas/DeviceMeasurementCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/assignments/{token}/measurements/series": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List assignment measurements as chart series",
        "operationId": "listMeasurementsForAssignmentAsChartSeriesUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementIds",
            "in": "query",
            "description": "Measurement Ids",
            "required": false,
            "allowEmptyValue": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IChartSeries«double»",
                    "$ref": "#/components/schemas/IChartSeries_double_"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments/{token}/missing": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Mark device assignment as missing",
        "operationId": "missingDeviceAssignmentUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceAssignment",
                  "$ref": "#/components/schemas/DeviceAssignment"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/assignments/{token}/responses": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List command response events for assignment",
        "operationId": "listCommandResponsesForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandResponse»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create command response event for assignment",
        "operationId": "createCommandResponseUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceCommandResponse",
                  "$ref": "#/components/schemas/DeviceCommandResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceCommandResponseCreateRequest",
                "$ref": "#/components/schemas/DeviceCommandResponseCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/assignments/{token}/statechanges": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List state change events for a device assignment",
        "operationId": "listStateChangesForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStateChange»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStateChange_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create an state change event for a device assignment",
        "operationId": "createStateChangeUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceStateChange",
                  "$ref": "#/components/schemas/IDeviceStateChange"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceStateChangeCreateRequest",
                "$ref": "#/components/schemas/DeviceStateChangeCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/assignments/{token}/streams": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "List data streams for device assignment",
        "operationId": "listDeviceStreamsForAssignmentUsingGET",
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStream»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStream_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create data stream for a device assignment",
        "operationId": "createDeviceStreamUsingPOST",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceStream",
                  "$ref": "#/components/schemas/DeviceStream"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceStreamCreateRequest",
                "$ref": "#/components/schemas/DeviceStreamCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      }
    },
    "/assignments/{token}/streams/{streamId}": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get device assignment data stream by id",
        "operationId": "getDeviceStreamUsingGET",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "description": "Stream Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Assignment token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "originalRef": "DeviceStream",
                  "$ref": "#/components/schemas/DeviceStream"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/authorities": {
      "get": {
        "tags": [
          "authorities"
        ],
        "summary": "List authorities that match criteria",
        "operationId": "listAuthoritiesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IGrantedAuthority»",
                  "$ref": "#/components/schemas/ISearchResults_IGrantedAuthority_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "authorities"
        ],
        "summary": "Create a new authority",
        "operationId": "createAuthorityUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "GrantedAuthority",
                  "$ref": "#/components/schemas/GrantedAuthority"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "GrantedAuthorityCreateRequest",
                "$ref": "#/components/schemas/GrantedAuthorityCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/authorities/hierarchy": {
      "get": {
        "tags": [
          "authorities"
        ],
        "summary": "Get authorities hierarchy",
        "operationId": "getAuthoritiesHierarchyUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "GrantedAuthorityHierarchyNode",
                    "$ref": "#/components/schemas/GrantedAuthorityHierarchyNode"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/authorities/{name}": {
      "get": {
        "tags": [
          "authorities"
        ],
        "summary": "Get authority by id",
        "operationId": "getAuthorityByNameUsingGET",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Authority name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "GrantedAuthority",
                  "$ref": "#/components/schemas/GrantedAuthority"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/batch": {
      "get": {
        "tags": [
          "batch-operations"
        ],
        "summary": "List batch operations",
        "operationId": "listBatchOperationsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IBatchOperation»",
                  "$ref": "#/components/schemas/ISearchResults_IBatchOperation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/batch/command": {
      "post": {
        "tags": [
          "batch-operations"
        ],
        "summary": "Create new batch command invocation",
        "operationId": "createBatchCommandInvocationUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IBatchOperation",
                  "$ref": "#/components/schemas/IBatchOperation"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "BatchCommandInvocationRequest",
                "$ref": "#/components/schemas/BatchCommandInvocationRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      }
    },
    "/batch/command/criteria": {
      "post": {
        "tags": [
          "batch-operations"
        ],
        "summary": "Create batch command operation based on criteria",
        "operationId": "createBatchCommandByCriteriaUsingPOST",
        "parameters": [
          {
            "name": "scheduleToken",
            "in": "query",
            "description": "Schedule token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "BatchCommandForCriteriaRequest",
                "$ref": "#/components/schemas/BatchCommandForCriteriaRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      }
    },
    "/batch/{batchToken}": {
      "get": {
        "tags": [
          "batch-operations"
        ],
        "summary": "Get batch operation by unique token",
        "operationId": "getBatchOperationByTokenUsingGET",
        "parameters": [
          {
            "name": "batchToken",
            "in": "path",
            "description": "Unique token that identifies batch operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IBatchOperation",
                  "$ref": "#/components/schemas/IBatchOperation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/batch/{operationToken}/elements": {
      "get": {
        "tags": [
          "batch-operations"
        ],
        "summary": "List batch operation elements",
        "operationId": "listBatchOperationElementsUsingGET",
        "parameters": [
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "operationToken",
            "in": "path",
            "description": "Unique batch operation token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IBatchElement»",
                  "$ref": "#/components/schemas/ISearchResults_IBatchElement_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/commands": {
      "get": {
        "tags": [
          "device-commands"
        ],
        "summary": "List device commands that match criteria.",
        "operationId": "listDeviceCommandsUsingGET",
        "parameters": [
          {
            "name": "deviceTypeToken",
            "in": "query",
            "description": "Device type token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommand»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommand_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "device-commands"
        ],
        "summary": "Create device command.",
        "operationId": "createDeviceCommandUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommand",
                  "$ref": "#/components/schemas/IDeviceCommand"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCommandCreateRequest"
        }
      }
    },
    "/commands/namespaces": {
      "get": {
        "tags": [
          "device-commands"
        ],
        "summary": "List device commands by namespace",
        "operationId": "listAllDeviceCommandsByNamespaceUsingGET",
        "parameters": [
          {
            "name": "deviceTypeToken",
            "in": "query",
            "description": "Device type token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandNamespace»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandNamespace_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/commands/{token}": {
      "get": {
        "tags": [
          "device-commands"
        ],
        "summary": "Get device command by unique token",
        "operationId": "getDeviceCommandByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommand",
                  "$ref": "#/components/schemas/IDeviceCommand"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "device-commands"
        ],
        "summary": "Update an existing device command",
        "operationId": "updateDeviceCommandUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommand",
                  "$ref": "#/components/schemas/IDeviceCommand"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCommandCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "device-commands"
        ],
        "summary": "Delete device command by unique token",
        "operationId": "deleteDeviceCommandUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommand",
                  "$ref": "#/components/schemas/IDeviceCommand"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List customers matching criteria",
        "operationId": "listCustomersUsingGET",
        "parameters": [
          {
            "name": "customerTypeToken",
            "in": "query",
            "description": "Limit by customer type token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCustomerType",
            "in": "query",
            "description": "Include customer type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "parentCustomerToken",
            "in": "query",
            "description": "Limit by parent customer token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rootOnly",
            "in": "query",
            "description": "Limit to root elements",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«ICustomer»",
                  "$ref": "#/components/schemas/ISearchResults_ICustomer_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Create new customer",
        "operationId": "createCustomerUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomer",
                  "$ref": "#/components/schemas/ICustomer"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "CustomerCreateRequest",
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/customers/{customerToken}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get customer by token",
        "operationId": "getCustomerByTokenUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCustomerType",
            "in": "query",
            "description": "Include customer type",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeParentCustomer",
            "in": "query",
            "description": "Include parent customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomer",
                  "$ref": "#/components/schemas/ICustomer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "customers"
        ],
        "summary": "Update existing customer",
        "operationId": "updateCustomerUsingPUT",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomer",
                  "$ref": "#/components/schemas/ICustomer"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "CustomerCreateRequest",
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete customer by token",
        "operationId": "deleteCustomerUsingDELETE",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomer",
                  "$ref": "#/components/schemas/ICustomer"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/alerts": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List alerts for a customer",
        "operationId": "listDeviceAlertsForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAlert»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAlert_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/assignments": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List device assignments for a customer",
        "operationId": "listAssignmentsForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit results to the given status",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«DeviceAssignment»",
                  "$ref": "#/components/schemas/ISearchResults_DeviceAssignment_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/invocations": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List command invocations for a customer",
        "operationId": "listDeviceCommandInvocationsForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandInvocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandInvocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get label for customer",
        "operationId": "getCustomerLabelUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/locations": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List locations for a customer",
        "operationId": "listDeviceLocationsForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceLocation»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceLocation_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/measurements": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List measurements for a customer",
        "operationId": "listDeviceMeasurementsForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceMeasurement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceMeasurement_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/responses": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List command responses for a customer",
        "operationId": "listDeviceCommandResponsesForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandResponse»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{customerToken}/statechanges": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "List state changes associated with a customer",
        "operationId": "listDeviceStateChangesForCustomerUsingGET",
        "parameters": [
          {
            "name": "customerToken",
            "in": "path",
            "description": "Token that identifies customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStateChange»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStateChange_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customertypes": {
      "get": {
        "tags": [
          "customer-types"
        ],
        "summary": "List customer types matching criteria",
        "operationId": "listCustomerTypesUsingGET",
        "parameters": [
          {
            "name": "includeContainedCustomerTypes",
            "in": "query",
            "description": "Include contained customer types",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«ICustomerType»",
                  "$ref": "#/components/schemas/ISearchResults_ICustomerType_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-types"
        ],
        "summary": "Create new customer type",
        "operationId": "createCustomerTypeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomerType",
                  "$ref": "#/components/schemas/ICustomerType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "CustomerTypeCreateRequest",
                "$ref": "#/components/schemas/CustomerTypeCreateRequest"
              }
            }
          },
          "description": "input",
          "required": true
        }
      }
    },
    "/customertypes/{customerTypeToken}": {
      "get": {
        "tags": [
          "customer-types"
        ],
        "summary": "Get customer type by token",
        "operationId": "getCustomerTypeByTokenUsingGET",
        "parameters": [
          {
            "name": "customerTypeToken",
            "in": "path",
            "description": "Token that identifies customer type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomerType",
                  "$ref": "#/components/schemas/ICustomerType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "customer-types"
        ],
        "summary": "Update existing customer type",
        "operationId": "updateCustomerTypeUsingPUT",
        "parameters": [
          {
            "name": "customerTypeToken",
            "in": "path",
            "description": "Token that identifies customer type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomerType",
                  "$ref": "#/components/schemas/ICustomerType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "CustomerTypeCreateRequest",
                "$ref": "#/components/schemas/CustomerTypeCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "customer-types"
        ],
        "summary": "Delete customer type by token",
        "operationId": "deleteCustomerTypeUsingDELETE",
        "parameters": [
          {
            "name": "customerTypeToken",
            "in": "path",
            "description": "Token that identifies customer type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ICustomerType",
                  "$ref": "#/components/schemas/ICustomerType"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/customertypes/{customerTypeToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "customer-types"
        ],
        "summary": "Get label for customer type",
        "operationId": "getCustomerTypeLabelUsingGET",
        "parameters": [
          {
            "name": "customerTypeToken",
            "in": "path",
            "description": "Token that identifies customer type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicegroups": {
      "get": {
        "tags": [
          "device-groups"
        ],
        "summary": "List device groups that match criteria",
        "operationId": "listDeviceGroupsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Role",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceGroup»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceGroup_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "device-groups"
        ],
        "summary": "Create new device group",
        "operationId": "createDeviceGroupUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceGroup",
                  "$ref": "#/components/schemas/IDeviceGroup"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceGroupCreateRequest"
        }
      }
    },
    "/devicegroups/{groupToken}": {
      "get": {
        "tags": [
          "device-groups"
        ],
        "summary": "Get a device group by unique token",
        "operationId": "getDeviceGroupByTokenUsingGET",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceGroup",
                  "$ref": "#/components/schemas/IDeviceGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "device-groups"
        ],
        "summary": "Update an existing device group",
        "operationId": "updateDeviceGroupUsingPUT",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Device group token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceGroup",
                  "$ref": "#/components/schemas/IDeviceGroup"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceGroupCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "device-groups"
        ],
        "summary": "Delete device group by unique token",
        "operationId": "deleteDeviceGroupUsingDELETE",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies device group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceGroup",
                  "$ref": "#/components/schemas/IDeviceGroup"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicegroups/{groupToken}/elements": {
      "get": {
        "tags": [
          "device-groups"
        ],
        "summary": "List elements in a device group",
        "operationId": "listDeviceGroupElementsUsingGET",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies device group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDetails",
            "in": "query",
            "description": "Include detailed element information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceGroupElement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceGroupElement_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "device-groups"
        ],
        "summary": "Add elements to device group",
        "operationId": "addDeviceGroupElementsUsingPUT",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies device group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceGroupElement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceGroupElement_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "originalRef": "DeviceGroupElementCreateRequest",
                  "$ref": "#/components/schemas/DeviceGroupElementCreateRequest"
                }
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "device-groups"
        ],
        "summary": "Delete elements from device group",
        "operationId": "deleteDeviceGroupElementsUsingDELETE",
        "parameters": [
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies device group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceGroupElement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceGroupElement_"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "description": "elementIds",
          "required": true
        }
      }
    },
    "/devicegroups/{groupToken}/elements/{elementId}": {
      "delete": {
        "tags": [
          "device-groups"
        ],
        "summary": "Delete elements from device group",
        "operationId": "deleteDeviceGroupElementUsingDELETE",
        "parameters": [
          {
            "name": "elementId",
            "in": "path",
            "description": "Element id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "groupToken",
            "in": "path",
            "description": "Unique token that identifies device group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceGroupElement»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceGroupElement_"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicegroups/{groupToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "device-groups"
        ],
        "summary": "Get label for area",
        "operationId": "getDeviceGroupLabelUsingGET",
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupToken",
            "in": "path",
            "description": "Device group token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "List devices that match criteria",
        "operationId": "listDevicesUsingGET",
        "parameters": [
          {
            "name": "deviceType",
            "in": "query",
            "description": "Device type filter",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "excludeAssigned",
            "in": "query",
            "description": "Exclude assigned devices",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAssignment",
            "in": "query",
            "description": "Include assignment information if associated",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeviceType",
            "in": "query",
            "description": "Include device type information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDevice»",
                  "$ref": "#/components/schemas/ISearchResults_IDevice_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Create new device",
        "operationId": "createDeviceUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCreateRequest"
        }
      }
    },
    "/devices/group/{groupToken}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "List devices in device group",
        "operationId": "listDevicesForGroupUsingGET",
        "parameters": [
          {
            "name": "deviceType",
            "in": "query",
            "description": "Device type filter",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "excludeAssigned",
            "in": "query",
            "description": "Exclude assigned devices",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "groupToken",
            "in": "path",
            "description": "Group token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAssignment",
            "in": "query",
            "description": "Include assignment information if associated",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted devices",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeviceType",
            "in": "query",
            "description": "Include device type information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDevice»",
                  "$ref": "#/components/schemas/ISearchResults_IDevice_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/grouprole/{role}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "List devices in device groups with role",
        "operationId": "listDevicesForGroupsWithRoleUsingGET",
        "parameters": [
          {
            "name": "deviceType",
            "in": "query",
            "description": "Device type filter",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "excludeAssigned",
            "in": "query",
            "description": "Exclude assigned devices",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAssignment",
            "in": "query",
            "description": "Include assignment information if associated",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted devices",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeviceType",
            "in": "query",
            "description": "Include device type information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "Group role",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDevice»",
                  "$ref": "#/components/schemas/ISearchResults_IDevice_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{deviceToken}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get device by token",
        "operationId": "getDeviceByTokenUsingGET",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAssignment",
            "in": "query",
            "description": "Include assignment if associated",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeDeviceType",
            "in": "query",
            "description": "Include device type information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeNested",
            "in": "query",
            "description": "Include detailed nested device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "devices"
        ],
        "summary": "Update an existing device",
        "operationId": "updateDeviceUsingPUT",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Delete device based on unique hardware id",
        "operationId": "deleteDeviceUsingDELETE",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{deviceToken}/assignment": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get current assignment for device",
        "operationId": "getDeviceCurrentAssignmentUsingGET",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceAssignment",
                  "$ref": "#/components/schemas/IDeviceAssignment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{deviceToken}/assignments": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "List assignment history for device",
        "operationId": "listDeviceAssignmentHistoryUsingGET",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceAssignment»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceAssignment_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{deviceToken}/batch": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Add multiple events for device",
        "operationId": "addDeviceEventBatchUsingPOST",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceEventBatchResponse",
                  "$ref": "#/components/schemas/IDeviceEventBatchResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceEventBatch",
                "$ref": "#/components/schemas/DeviceEventBatch"
              }
            }
          },
          "description": "batch",
          "required": true
        }
      }
    },
    "/devices/{deviceToken}/label/{generatorId}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get label for device",
        "operationId": "getDeviceLabelUsingGET",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{deviceToken}/mappings": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Create new device element mapping",
        "operationId": "addDeviceElementMappingUsingPOST",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceElementMapping",
                "$ref": "#/components/schemas/DeviceElementMapping"
              }
            }
          },
          "description": "request",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Delete existing device element mapping",
        "operationId": "deleteDeviceElementMappingUsingDELETE",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "path",
            "description": "Device token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Device element path",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDevice",
                  "$ref": "#/components/schemas/IDevice"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devices/{hardwareId}/symbol": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get default symbol for device",
        "operationId": "getDeviceDefaultSymbolUsingGET",
        "parameters": [
          {
            "name": "hardwareId",
            "in": "path",
            "description": "Hardware id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicestates/search": {
      "post": {
        "tags": [
          "device-states"
        ],
        "summary": "List device states matching criteria",
        "operationId": "searchDeviceStatesUsingPOST",
        "parameters": [
          {
            "name": "includeArea",
            "in": "query",
            "description": "Include area information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeCustomer",
            "in": "query",
            "description": "Include customer information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDevice",
            "in": "query",
            "description": "Include device information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeviceAssignment",
            "in": "query",
            "description": "Include device assignment information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeDeviceType",
            "in": "query",
            "description": "Include device type information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeEventDetails",
            "in": "query",
            "description": "Include event details",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceState»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceState_"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "originalRef": "DeviceStateSearchCriteria",
                "$ref": "#/components/schemas/DeviceStateSearchCriteria"
              }
            }
          },
          "description": "criteria",
          "required": true
        }
      }
    },
    "/devicetypes": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "List device types that match criteria",
        "operationId": "listDeviceTypesUsingGET",
        "parameters": [
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include detailed asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceType»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceType_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "device-types"
        ],
        "summary": "Create new device type",
        "operationId": "createDeviceTypeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceType",
                  "$ref": "#/components/schemas/IDeviceType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceTypeCreateRequest"
        }
      }
    },
    "/devicetypes/{token}": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Get device type by unique token",
        "operationId": "getDeviceTypeByTokenUsingGET",
        "parameters": [
          {
            "name": "includeAsset",
            "in": "query",
            "description": "Include detailed asset information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceType",
                  "$ref": "#/components/schemas/IDeviceType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "device-types"
        ],
        "summary": "Update existing device type",
        "operationId": "updateDeviceTypeUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceType",
                  "$ref": "#/components/schemas/IDeviceType"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceTypeCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "device-types"
        ],
        "summary": "Delete existing device type",
        "operationId": "deleteDeviceTypeUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceType",
                  "$ref": "#/components/schemas/IDeviceType"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicetypes/{token}/label/{generatorId}": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Get label for device type",
        "operationId": "getDeviceTypeLabelUsingGET",
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Generator id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicetypes/{token}/proto": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Get specification GPB by unique token",
        "operationId": "getDeviceTypeProtoByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/devicetypes/{token}/spec.proto": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Get device type GPB file by unique token",
        "operationId": "getDeviceTypeProtoFileByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/events/alternate/{alternateId}": {
      "get": {
        "tags": [
          "device-events"
        ],
        "summary": "Get event by alternate (external) id",
        "operationId": "getEventByAlternateIdUsingGET",
        "parameters": [
          {
            "name": "alternateId",
            "in": "path",
            "description": "Alternate id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceEvent",
                  "$ref": "#/components/schemas/IDeviceEvent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/events/id/{eventId}": {
      "get": {
        "tags": [
          "device-events"
        ],
        "summary": "Get event by unique id",
        "operationId": "getEventByIdUsingGET",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceEvent",
                  "$ref": "#/components/schemas/IDeviceEvent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/configuration": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get global configuration based on service identifier",
        "operationId": "getMicroserviceGlobalConfigurationUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ElementContent",
                  "$ref": "#/components/schemas/ElementContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Update global configuration based on service identifier.",
        "operationId": "updateMicroserviceGlobalConfigurationUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ElementContent"
        }
      }
    },
    "/instance/microservice/{identifier}/configuration/model": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get configuration model based on service identifier",
        "operationId": "getMicroserviceConfigurationModelUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IConfigurationModel",
                  "$ref": "#/components/schemas/IConfigurationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get list of global script metadata",
        "operationId": "listGlobalScriptMetadataUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IScriptMetadata",
                    "$ref": "#/components/schemas/IScriptMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Create a new global script",
        "operationId": "createGlobalScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCreateRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts/{scriptId}": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get metadata for a tenant script based on unique script id",
        "operationId": "getGlobalScriptMetadataUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "instance"
        ],
        "summary": "Delete a global script and version history",
        "operationId": "deleteGlobalScriptUsingDELETE",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts/{scriptId}/versions/{versionId}": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Update an existing global script",
        "operationId": "updateGlobalScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCreateRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts/{scriptId}/versions/{versionId}/activate": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Activate a global script version",
        "operationId": "activateGlobalScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts/{scriptId}/versions/{versionId}/clone": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Clone an existing global script version to create a new version",
        "operationId": "cloneGlobalScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptVersion",
                  "$ref": "#/components/schemas/IScriptVersion"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCloneRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/scripting/scripts/{scriptId}/versions/{versionId}/content": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get content for a global script based on unique script id and version id",
        "operationId": "getGlobalScriptContentUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/scripting/templates": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get list of script templates for a given microservice",
        "operationId": "getMicroserviceScriptTemplatesUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IScriptTemplate",
                    "$ref": "#/components/schemas/IScriptTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/scripting/templates/{templateId}": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get list of script templates for a given microservice",
        "operationId": "getMicroserviceScriptTemplateUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/configuration": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get tenant configuration based on service identifier",
        "operationId": "getMicroserviceTenantConfigurationUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ElementContent",
                  "$ref": "#/components/schemas/ElementContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Update global configuration based on service identifier.",
        "operationId": "updateMicroserviceTenantConfigurationUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ElementContent"
        }
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get list of script metadata for the given tenant",
        "operationId": "listTenantScriptMetadataUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IScriptMetadata",
                    "$ref": "#/components/schemas/IScriptMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Create a new tenant script",
        "operationId": "createTenantScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCreateRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts/{scriptId}": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get metadata for a tenant script based on unique script id",
        "operationId": "getTenantScriptMetadataUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "instance"
        ],
        "summary": "Delete a tenant script and version history",
        "operationId": "deleteTenantScriptUsingDELETE",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts/{scriptId}/versions/{versionId}": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Update an existing tenant script",
        "operationId": "updateTenantScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCreateRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts/{scriptId}/versions/{versionId}/activate": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Activate a tenant script version",
        "operationId": "activateTenantScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptMetadata",
                  "$ref": "#/components/schemas/IScriptMetadata"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts/{scriptId}/versions/{versionId}/clone": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Clone an existing tenant script version to create a new version",
        "operationId": "cloneTenantScriptUsingPOST",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScriptVersion",
                  "$ref": "#/components/schemas/IScriptVersion"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScriptCloneRequest"
        }
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/scripting/scripts/{scriptId}/versions/{versionId}/content": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get content for a tenant script based on unique script id and version id",
        "operationId": "getTenantScriptContentUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Function identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/microservice/{identifier}/tenants/{tenantToken}/state": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get state information for specific tenant engine across all microservice instances",
        "operationId": "getMicroserviceTenantRuntimeStateUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "ITenantEngineState",
                    "$ref": "#/components/schemas/ITenantEngineState"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/topology": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get current instance topology",
        "operationId": "getInstanceTopologyUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "InstanceTopologySummary",
                    "$ref": "#/components/schemas/InstanceTopologySummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/topology/global": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get global microservices in current instance topology",
        "operationId": "getGlobalInstanceTopologyUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "InstanceTopologySummary",
                    "$ref": "#/components/schemas/InstanceTopologySummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/instance/topology/tenant": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get tenant microservices in current instance topology",
        "operationId": "getTenantInstanceTopologyUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "InstanceTopologySummary",
                    "$ref": "#/components/schemas/InstanceTopologySummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/invocations/id/{id}": {
      "get": {
        "tags": [
          "command-invocations"
        ],
        "summary": "Get command invocation by unique id.",
        "operationId": "getDeviceCommandInvocationUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceCommandInvocation",
                  "$ref": "#/components/schemas/IDeviceCommandInvocation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/invocations/id/{id}/summary": {
      "get": {
        "tags": [
          "command-invocations"
        ],
        "summary": "Get command invocation summary",
        "operationId": "getDeviceCommandInvocationSummaryUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "DeviceCommandInvocationSummary",
                  "$ref": "#/components/schemas/DeviceCommandInvocationSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/invocations/id/{invocationId}/responses": {
      "get": {
        "tags": [
          "command-invocations"
        ],
        "summary": "List responses for command invocation",
        "operationId": "listCommandInvocationResponsesUsingGET",
        "parameters": [
          {
            "name": "invocationId",
            "in": "path",
            "description": "Invocation id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceCommandResponse»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceCommandResponse_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "scheduled-jobs"
        ],
        "summary": "List scheduled jobs matching criteria",
        "operationId": "listScheduledJobsUsingGET",
        "parameters": [
          {
            "name": "includeContext",
            "in": "query",
            "description": "Include context information",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IScheduledJob»",
                  "$ref": "#/components/schemas/ISearchResults_IScheduledJob_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "scheduled-jobs"
        ],
        "summary": "Create new scheduled job",
        "operationId": "createScheduledJobUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScheduledJob",
                  "$ref": "#/components/schemas/IScheduledJob"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScheduledJobCreateRequest"
        }
      }
    },
    "/jobs/{token}": {
      "get": {
        "tags": [
          "scheduled-jobs"
        ],
        "summary": "Get scheduled job by token",
        "operationId": "getScheduledJobByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScheduledJob",
                  "$ref": "#/components/schemas/IScheduledJob"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "scheduled-jobs"
        ],
        "summary": "Update existing scheduled job",
        "operationId": "updateScheduledJobUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScheduledJob",
                  "$ref": "#/components/schemas/IScheduledJob"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScheduledJobCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "scheduled-jobs"
        ],
        "summary": "Delete scheduled job",
        "operationId": "deleteScheduledJobUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IScheduledJob",
                  "$ref": "#/components/schemas/IScheduledJob"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/schedules": {
      "get": {
        "tags": [
          "schedules"
        ],
        "summary": "List schedules matching criteria",
        "operationId": "listSchedulesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«ISchedule»",
                  "$ref": "#/components/schemas/ISearchResults_ISchedule_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "schedules"
        ],
        "summary": "Create new schedule",
        "operationId": "createScheduleUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISchedule",
                  "$ref": "#/components/schemas/ISchedule"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScheduleCreateRequest"
        }
      }
    },
    "/schedules/{token}": {
      "get": {
        "tags": [
          "schedules"
        ],
        "summary": "Get schedule by token",
        "operationId": "getScheduleByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISchedule",
                  "$ref": "#/components/schemas/ISchedule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "schedules"
        ],
        "summary": "Update an existing schedule",
        "operationId": "updateScheduleUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISchedule",
                  "$ref": "#/components/schemas/ISchedule"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ScheduleCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "schedules"
        ],
        "summary": "Delete a schedule",
        "operationId": "deleteScheduleUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISchedule",
                  "$ref": "#/components/schemas/ISchedule"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/search": {
      "get": {
        "tags": [
          "external-search"
        ],
        "summary": "List available search providers",
        "operationId": "listSearchProvidersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "SearchProvider",
                    "$ref": "#/components/schemas/SearchProvider"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/search/{providerId}/events": {
      "get": {
        "tags": [
          "external-search"
        ],
        "summary": "Search for events in provider",
        "operationId": "searchDeviceEventsUsingGET",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Search provider id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IDeviceEvent",
                    "$ref": "#/components/schemas/IDeviceEvent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/search/{providerId}/raw": {
      "post": {
        "tags": [
          "external-search"
        ],
        "summary": "Execute search and return raw results",
        "operationId": "rawSearchUsingPOST",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Search provider id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "JsonNode",
                  "$ref": "#/components/schemas/JsonNode"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "query",
          "required": true
        }
      }
    },
    "/statuses": {
      "get": {
        "tags": [
          "device-statuses"
        ],
        "summary": "List device statuses that match criteria.",
        "operationId": "listDeviceStatusesUsingGET",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Status code",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceTypeToken",
            "in": "query",
            "description": "Device type token",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IDeviceStatus»",
                  "$ref": "#/components/schemas/ISearchResults_IDeviceStatus_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "device-statuses"
        ],
        "summary": "Create device status.",
        "operationId": "createDeviceStatusUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceStatus",
                  "$ref": "#/components/schemas/IDeviceStatus"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceStatusCreateRequest"
        }
      }
    },
    "/statuses/{token}": {
      "get": {
        "tags": [
          "device-statuses"
        ],
        "summary": "Get device status by unique token",
        "operationId": "getDeviceStatusByTokenUsingGET",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceStatus",
                  "$ref": "#/components/schemas/IDeviceStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "device-statuses"
        ],
        "summary": "Update an existing device status",
        "operationId": "updateDeviceStatusUsingPUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceStatus",
                  "$ref": "#/components/schemas/IDeviceStatus"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceStatusCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "device-statuses"
        ],
        "summary": "Delete device status by unique token",
        "operationId": "deleteDeviceStatusUsingDELETE",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IDeviceStatus",
                  "$ref": "#/components/schemas/IDeviceStatus"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/system/version": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get version information",
        "operationId": "getVersionUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IVersion",
                  "$ref": "#/components/schemas/IVersion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "List tenants that match criteria",
        "operationId": "listTenantsUsingGET",
        "parameters": [
          {
            "name": "authUserId",
            "in": "query",
            "description": "Authorized user id",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeRuntimeInfo",
            "in": "query",
            "description": "Include runtime info",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "textSearch",
            "in": "query",
            "description": "Text search (partial id or name)",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«ITenant»",
                  "$ref": "#/components/schemas/ISearchResults_ITenant_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "tenants"
        ],
        "summary": "Create new tenant",
        "operationId": "createTenantUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ITenant",
                  "$ref": "#/components/schemas/ITenant"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/TenantCreateRequest"
        }
      }
    },
    "/tenants/datasets": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "List datasets available for creating tenants",
        "operationId": "listDatasetTemplatesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "IDatasetTemplate",
                    "$ref": "#/components/schemas/IDatasetTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/tenants/templates": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "List templates available for creating tenants",
        "operationId": "listTenantTemplatesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "originalRef": "ITenantTemplate",
                    "$ref": "#/components/schemas/ITenantTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/tenants/{tenantToken}": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "Get tenant by token",
        "operationId": "getTenantByTokenUsingGET",
        "parameters": [
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ITenant",
                  "$ref": "#/components/schemas/ITenant"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "tenants"
        ],
        "summary": "Update an existing tenant.",
        "operationId": "updateTenantUsingPUT",
        "parameters": [
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ITenant",
                  "$ref": "#/components/schemas/ITenant"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/TenantCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "tenants"
        ],
        "summary": "Delete existing tenant",
        "operationId": "deleteTenantByIdUsingDELETE",
        "parameters": [
          {
            "name": "tenantToken",
            "in": "path",
            "description": "Tenant token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ITenant",
                  "$ref": "#/components/schemas/ITenant"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List users matching criteria",
        "operationId": "listUsersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IUser»",
                  "$ref": "#/components/schemas/ISearchResults_IUser_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create new user",
        "operationId": "createUserUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "User",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/UserCreateRequest"
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by username",
        "operationId": "getUserByUsernameUsingGET",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Unique username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "User",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update existing user.",
        "operationId": "updateUserUsingPUT",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Unique username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "User",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/UserCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user by username",
        "operationId": "deleteUserByUsernameUsingDELETE",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Unique username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "User",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/users/{username}/authorities": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get authorities for user",
        "operationId": "getAuthoritiesForUsernameUsingGET",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Unique username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "SearchResults«GrantedAuthority»",
                  "$ref": "#/components/schemas/SearchResults_GrantedAuthority_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    },
    "/zones": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "List zones that match criteria",
        "operationId": "listZonesUsingGET",
        "parameters": [
          {
            "name": "areaToken",
            "in": "query",
            "description": "Token that identifies an area",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "ISearchResults«IZone»",
                  "$ref": "#/components/schemas/ISearchResults_IZone_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "zones"
        ],
        "summary": "Create new zone",
        "operationId": "createZoneUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IZone",
                  "$ref": "#/components/schemas/IZone"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ZoneCreateRequest"
        }
      }
    },
    "/zones/{zoneToken}": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "Get zone by token",
        "operationId": "getZoneUsingGET",
        "parameters": [
          {
            "name": "zoneToken",
            "in": "path",
            "description": "Unique token that identifies zone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IZone",
                  "$ref": "#/components/schemas/IZone"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "zones"
        ],
        "summary": "Update an existing zone",
        "operationId": "updateZoneUsingPUT",
        "parameters": [
          {
            "name": "zoneToken",
            "in": "path",
            "description": "Unique token that identifies zone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IZone",
                  "$ref": "#/components/schemas/IZone"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false,
        "requestBody": {
          "$ref": "#/components/requestBodies/ZoneCreateRequest"
        }
      },
      "delete": {
        "tags": [
          "zones"
        ],
        "summary": "Delete zone by unique token",
        "operationId": "deleteZoneUsingDELETE",
        "parameters": [
          {
            "name": "zoneToken",
            "in": "path",
            "description": "Unique token that identifies zone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "originalRef": "IZone",
                  "$ref": "#/components/schemas/IZone"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "deprecated": false
      }
    }
  },
  "servers": [
    {
      "url": "//localhost:8080/sitewhere/api"
    }
  ],
  "components": {
    "requestBodies": {
      "ScriptCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ScriptCreateRequest",
              "$ref": "#/components/schemas/ScriptCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "AssetTypeCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "AssetTypeCreateRequest",
              "$ref": "#/components/schemas/AssetTypeCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ScheduleCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ScheduleCreateRequest",
              "$ref": "#/components/schemas/ScheduleCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ScriptCloneRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ScriptCloneRequest",
              "$ref": "#/components/schemas/ScriptCloneRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "TenantCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "TenantCreateRequest",
              "$ref": "#/components/schemas/TenantCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "AssetCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "AssetCreateRequest",
              "$ref": "#/components/schemas/AssetCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceAssignmentBulkRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceAssignmentBulkRequest",
              "$ref": "#/components/schemas/DeviceAssignmentBulkRequest"
            }
          }
        },
        "description": "bulk",
        "required": true
      },
      "ZoneCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ZoneCreateRequest",
              "$ref": "#/components/schemas/ZoneCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceAssignmentCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceAssignmentCreateRequest",
              "$ref": "#/components/schemas/DeviceAssignmentCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceCommandInvocationCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceCommandInvocationCreateRequest",
              "$ref": "#/components/schemas/DeviceCommandInvocationCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceCommandCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceCommandCreateRequest",
              "$ref": "#/components/schemas/DeviceCommandCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceGroupCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceGroupCreateRequest",
              "$ref": "#/components/schemas/DeviceGroupCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceCreateRequest",
              "$ref": "#/components/schemas/DeviceCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceTypeCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceTypeCreateRequest",
              "$ref": "#/components/schemas/DeviceTypeCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ElementContent": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ElementContent",
              "$ref": "#/components/schemas/ElementContent"
            }
          }
        },
        "description": "content",
        "required": true
      },
      "ScheduledJobCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "ScheduledJobCreateRequest",
              "$ref": "#/components/schemas/ScheduledJobCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceStatusCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "DeviceStatusCreateRequest",
              "$ref": "#/components/schemas/DeviceStatusCreateRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "UserCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "originalRef": "UserCreateRequest",
              "$ref": "#/components/schemas/UserCreateRequest"
            }
          }
        },
        "description": "input",
        "required": true
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "AreaCreateRequest": {
        "type": "object",
        "properties": {
          "areaTypeToken": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "bounds": {
            "type": "array",
            "items": {
              "originalRef": "Location",
              "$ref": "#/components/schemas/Location"
            }
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "parentAreaToken": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "AreaCreateRequest"
      },
      "AreaTypeCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containedAreaTypeTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "AreaTypeCreateRequest"
      },
      "AssetCreateRequest": {
        "type": "object",
        "properties": {
          "assetTypeToken": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "AssetCreateRequest"
      },
      "AssetTypeCreateRequest": {
        "type": "object",
        "properties": {
          "assetCategory": {
            "type": "string",
            "enum": [
              "Device",
              "Person",
              "Hardware"
            ]
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "AssetTypeCreateRequest"
      },
      "AttributeContent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "AttributeContent"
      },
      "BatchCommandForCriteriaRequest": {
        "type": "object",
        "properties": {
          "areaToken": {
            "type": "string"
          },
          "commandToken": {
            "type": "string"
          },
          "deviceTypeToken": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "groupToken": {
            "type": "string"
          },
          "groupsWithRole": {
            "type": "string"
          },
          "parameterValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "BatchCommandForCriteriaRequest"
      },
      "BatchCommandInvocationRequest": {
        "type": "object",
        "properties": {
          "commandToken": {
            "type": "string"
          },
          "deviceTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          }
        },
        "title": "BatchCommandInvocationRequest"
      },
      "CommandParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "Double",
              "Float",
              "Int32",
              "Int64",
              "UInt32",
              "UInt64",
              "SInt32",
              "SInt64",
              "Fixed32",
              "Fixed64",
              "SFixed32",
              "SFixed64",
              "Bool",
              "String",
              "Bytes"
            ]
          }
        },
        "title": "CommandParameter"
      },
      "CustomerCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "customerTypeToken": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "parentCustomerToken": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "CustomerCreateRequest"
      },
      "CustomerTypeCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containedCustomerTypeTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "CustomerTypeCreateRequest"
      },
      "DeviceAlertCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "level": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Error",
              "Critical"
            ]
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "enum": [
              "Device",
              "System"
            ]
          },
          "type": {
            "type": "string"
          },
          "updateState": {
            "type": "boolean"
          }
        },
        "title": "DeviceAlertCreateRequest"
      },
      "DeviceAssignment": {
        "type": "object",
        "properties": {
          "activeDate": {
            "type": "string",
            "format": "date-time"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "releasedDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Missing",
              "Released"
            ]
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "DeviceAssignment"
      },
      "DeviceAssignmentBulkRequest": {
        "type": "object",
        "properties": {
          "deviceAssignmentTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "DeviceAssignmentBulkRequest"
      },
      "DeviceAssignmentCreateRequest": {
        "type": "object",
        "properties": {
          "areaToken": {
            "type": "string"
          },
          "assetToken": {
            "type": "string"
          },
          "customerToken": {
            "type": "string"
          },
          "deviceToken": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Missing",
              "Released"
            ]
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceAssignmentCreateRequest"
      },
      "DeviceCommandCreateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "deviceTypeToken": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "originalRef": "CommandParameter",
              "$ref": "#/components/schemas/CommandParameter"
            }
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceCommandCreateRequest"
      },
      "DeviceCommandInvocationCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "commandToken": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "initiator": {
            "type": "string",
            "enum": [
              "REST",
              "BatchOperation",
              "Script",
              "Scheduler"
            ]
          },
          "initiatorId": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "parameterValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "target": {
            "type": "string",
            "enum": [
              "Assignment"
            ]
          },
          "targetId": {
            "type": "string"
          },
          "updateState": {
            "type": "boolean"
          }
        },
        "title": "DeviceCommandInvocationCreateRequest"
      },
      "DeviceCommandInvocationSummary": {
        "type": "object",
        "properties": {
          "invocationDate": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "originalRef": "Parameter",
              "$ref": "#/components/schemas/Parameter"
            }
          },
          "responses": {
            "type": "array",
            "items": {
              "originalRef": "Response",
              "$ref": "#/components/schemas/Response"
            }
          }
        },
        "title": "DeviceCommandInvocationSummary"
      },
      "DeviceCommandResponse": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "originatingEventId": {
            "type": "string",
            "format": "uuid"
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "response": {
            "type": "string"
          },
          "responseEventId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "DeviceCommandResponse"
      },
      "DeviceCommandResponseCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "originatingEventId": {
            "type": "string",
            "format": "uuid"
          },
          "response": {
            "type": "string"
          },
          "responseEventId": {
            "type": "string",
            "format": "uuid"
          },
          "updateState": {
            "type": "boolean"
          }
        },
        "title": "DeviceCommandResponseCreateRequest"
      },
      "DeviceCreateRequest": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string"
          },
          "deviceElementMappings": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceElementMapping",
              "$ref": "#/components/schemas/IDeviceElementMapping"
            }
          },
          "deviceTypeToken": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "parentDeviceToken": {
            "type": "string"
          },
          "removeParentHardwareId": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceCreateRequest"
      },
      "DeviceElementMapping": {
        "type": "object",
        "properties": {
          "device": {
            "originalRef": "IDevice",
            "$ref": "#/components/schemas/IDevice"
          },
          "deviceElementSchemaPath": {
            "type": "string"
          },
          "deviceToken": {
            "type": "string"
          }
        },
        "title": "DeviceElementMapping"
      },
      "DeviceElementSchema": {
        "type": "object",
        "properties": {
          "deviceSlots": {
            "type": "array",
            "items": {
              "originalRef": "DeviceSlot",
              "$ref": "#/components/schemas/DeviceSlot"
            }
          },
          "deviceUnits": {
            "type": "array",
            "items": {
              "originalRef": "DeviceUnit",
              "$ref": "#/components/schemas/DeviceUnit"
            }
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "DeviceElementSchema"
      },
      "DeviceEventBatch": {
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "items": {
              "originalRef": "DeviceAlertCreateRequest",
              "$ref": "#/components/schemas/DeviceAlertCreateRequest"
            }
          },
          "hardwareId": {
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "originalRef": "DeviceLocationCreateRequest",
              "$ref": "#/components/schemas/DeviceLocationCreateRequest"
            }
          },
          "measurements": {
            "type": "array",
            "items": {
              "originalRef": "DeviceMeasurementCreateRequest",
              "$ref": "#/components/schemas/DeviceMeasurementCreateRequest"
            }
          }
        },
        "title": "DeviceEventBatch"
      },
      "DeviceGroupCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceGroupCreateRequest"
      },
      "DeviceGroupElementCreateRequest": {
        "type": "object",
        "properties": {
          "deviceToken": {
            "type": "string"
          },
          "nestedGroupToken": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "DeviceGroupElementCreateRequest"
      },
      "DeviceLocationCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "updateState": {
            "type": "boolean"
          }
        },
        "title": "DeviceLocationCreateRequest"
      },
      "DeviceMeasurementCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "updateState": {
            "type": "boolean"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "DeviceMeasurementCreateRequest"
      },
      "DeviceSlot": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "DeviceSlot"
      },
      "DeviceStateChangeCreateRequest": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "newState": {
            "type": "string"
          },
          "previousState": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updateState": {
            "type": "boolean"
          }
        },
        "title": "DeviceStateChangeCreateRequest"
      },
      "DeviceStateSearchCriteria": {
        "type": "object",
        "properties": {
          "areaIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "assetIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "customerIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "deviceTypeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "lastInteractionDateBefore": {
            "type": "string",
            "format": "date-time"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "DeviceStateSearchCriteria"
      },
      "DeviceStatusCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "deviceTypeToken": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceStatusCreateRequest"
      },
      "DeviceStream": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "contentType": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "streamId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "DeviceStream"
      },
      "DeviceStreamCreateRequest": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "streamId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceStreamCreateRequest"
      },
      "DeviceTypeCreateRequest": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containerPolicy": {
            "type": "string",
            "enum": [
              "Standalone",
              "Composite"
            ]
          },
          "description": {
            "type": "string"
          },
          "deviceElementSchema": {
            "originalRef": "DeviceElementSchema",
            "$ref": "#/components/schemas/DeviceElementSchema"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "DeviceTypeCreateRequest"
      },
      "DeviceUnit": {
        "type": "object",
        "properties": {
          "deviceSlots": {
            "type": "array",
            "items": {
              "originalRef": "DeviceSlot",
              "$ref": "#/components/schemas/DeviceSlot"
            }
          },
          "deviceUnits": {
            "type": "array",
            "items": {
              "originalRef": "DeviceUnit",
              "$ref": "#/components/schemas/DeviceUnit"
            }
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "DeviceUnit"
      },
      "ElementContent": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "originalRef": "AttributeContent",
              "$ref": "#/components/schemas/AttributeContent"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "originalRef": "ElementContent",
              "$ref": "#/components/schemas/ElementContent"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        },
        "title": "ElementContent"
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "group": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          }
        },
        "title": "GrantedAuthority"
      },
      "GrantedAuthorityCreateRequest": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "group": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          }
        },
        "title": "GrantedAuthorityCreateRequest"
      },
      "GrantedAuthorityHierarchyNode": {
        "type": "object",
        "properties": {
          "group": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "originalRef": "GrantedAuthorityHierarchyNode",
              "$ref": "#/components/schemas/GrantedAuthorityHierarchyNode"
            }
          },
          "text": {
            "type": "string"
          }
        },
        "title": "GrantedAuthorityHierarchyNode"
      },
      "IArea": {
        "type": "object",
        "properties": {
          "areaTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "bounds": {
            "type": "array",
            "items": {
              "originalRef": "ILocation",
              "$ref": "#/components/schemas/ILocation"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "parentAreaId": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IArea"
      },
      "IAreaType": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containedAreaTypeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IAreaType"
      },
      "IAsset": {
        "type": "object",
        "properties": {
          "assetTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IAsset"
      },
      "IAssetType": {
        "type": "object",
        "properties": {
          "assetCategory": {
            "type": "string",
            "enum": [
              "Device",
              "Person",
              "Hardware"
            ]
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IAssetType"
      },
      "IAttributeChoice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "IAttributeChoice"
      },
      "IAttributeNode": {
        "type": "object",
        "properties": {
          "choices": {
            "type": "array",
            "items": {
              "originalRef": "IAttributeChoice",
              "$ref": "#/components/schemas/IAttributeChoice"
            }
          },
          "defaultValue": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "index": {
            "type": "boolean"
          },
          "localName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "Element",
              "Attribute"
            ]
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "String",
              "Integer",
              "Decimal",
              "Boolean",
              "Script",
              "DeviceTypeReference",
              "CustomerReference",
              "AreaReference",
              "AssetReference"
            ]
          }
        },
        "title": "IAttributeNode"
      },
      "IBatchElement": {
        "type": "object",
        "properties": {
          "batchOperationId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "processedDate": {
            "type": "string",
            "format": "date-time"
          },
          "processingStatus": {
            "type": "string",
            "enum": [
              "Unprocessed",
              "Processing",
              "Failed",
              "Succeeded"
            ]
          }
        },
        "title": "IBatchElement"
      },
      "IBatchOperation": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "operationType": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "processingEndedDate": {
            "type": "string",
            "format": "date-time"
          },
          "processingStartedDate": {
            "type": "string",
            "format": "date-time"
          },
          "processingStatus": {
            "type": "string",
            "enum": [
              "Unprocessed",
              "Processing",
              "FinishedSuccessfully",
              "FinishedWithErrors"
            ]
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IBatchOperation"
      },
      "ICommandParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "Double",
              "Float",
              "Int32",
              "Int64",
              "UInt32",
              "UInt64",
              "SInt32",
              "SInt64",
              "Fixed32",
              "Fixed64",
              "SFixed32",
              "SFixed64",
              "Bool",
              "String",
              "Bytes"
            ]
          }
        },
        "title": "ICommandParameter"
      },
      "IConfigurationModel": {
        "type": "object",
        "properties": {
          "defaultXmlNamespace": {
            "type": "string"
          },
          "elementsByRole": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "originalRef": "IElementNode",
                "$ref": "#/components/schemas/IElementNode"
              }
            }
          },
          "microserviceDetails": {
            "originalRef": "IMicroserviceDetails",
            "$ref": "#/components/schemas/IMicroserviceDetails"
          },
          "rolesById": {
            "type": "object",
            "additionalProperties": {
              "originalRef": "IElementRole",
              "$ref": "#/components/schemas/IElementRole"
            }
          },
          "rootRoleId": {
            "type": "string"
          }
        },
        "title": "IConfigurationModel"
      },
      "ICustomer": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "parentCustomerId": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ICustomer"
      },
      "ICustomerType": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containedCustomerTypeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ICustomerType"
      },
      "IDatasetTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "initializers": {
            "originalRef": "Initializers",
            "$ref": "#/components/schemas/Initializers"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "IDatasetTemplate"
      },
      "IDevice": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceElementMappings": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceElementMapping",
              "$ref": "#/components/schemas/IDeviceElementMapping"
            }
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "parentDeviceId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDevice"
      },
      "IDeviceAlert": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "level": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Error",
              "Critical"
            ]
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "enum": [
              "Device",
              "System"
            ]
          },
          "type": {
            "type": "string"
          }
        },
        "title": "IDeviceAlert"
      },
      "IDeviceAssignment": {
        "type": "object",
        "properties": {
          "activeDate": {
            "type": "string",
            "format": "date-time"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "releasedDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Missing",
              "Released"
            ]
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceAssignment"
      },
      "IDeviceCommand": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "originalRef": "ICommandParameter",
              "$ref": "#/components/schemas/ICommandParameter"
            }
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceCommand"
      },
      "IDeviceCommandInvocation": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "commandToken": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "initiator": {
            "type": "string",
            "enum": [
              "REST",
              "BatchOperation",
              "Script",
              "Scheduler"
            ]
          },
          "initiatorId": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "parameterValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "target": {
            "type": "string",
            "enum": [
              "Assignment"
            ]
          },
          "targetId": {
            "type": "string"
          }
        },
        "title": "IDeviceCommandInvocation"
      },
      "IDeviceCommandNamespace": {
        "type": "object",
        "properties": {
          "commands": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceCommand",
              "$ref": "#/components/schemas/IDeviceCommand"
            }
          },
          "value": {
            "type": "string"
          }
        },
        "title": "IDeviceCommandNamespace"
      },
      "IDeviceCommandResponse": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "originatingEventId": {
            "type": "string",
            "format": "uuid"
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "response": {
            "type": "string"
          },
          "responseEventId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "IDeviceCommandResponse"
      },
      "IDeviceElementMapping": {
        "type": "object",
        "properties": {
          "deviceElementSchemaPath": {
            "type": "string"
          },
          "deviceToken": {
            "type": "string"
          }
        },
        "title": "IDeviceElementMapping"
      },
      "IDeviceElementSchema": {
        "type": "object",
        "properties": {
          "deviceSlots": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceSlot",
              "$ref": "#/components/schemas/IDeviceSlot"
            }
          },
          "deviceUnits": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceUnit",
              "$ref": "#/components/schemas/IDeviceUnit"
            }
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "IDeviceElementSchema"
      },
      "IDeviceEvent": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceEvent"
      },
      "IDeviceEventBatchResponse": {
        "type": "object",
        "properties": {
          "createdAlerts": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceAlert",
              "$ref": "#/components/schemas/IDeviceAlert"
            }
          },
          "createdLocations": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceLocation",
              "$ref": "#/components/schemas/IDeviceLocation"
            }
          },
          "createdMeasurements": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceMeasurement",
              "$ref": "#/components/schemas/IDeviceMeasurement"
            }
          }
        },
        "title": "IDeviceEventBatchResponse"
      },
      "IDeviceGroup": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceGroup"
      },
      "IDeviceGroupElement": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nestedGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "IDeviceGroupElement"
      },
      "IDeviceLocation": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceLocation"
      },
      "IDeviceMeasurement": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "IDeviceMeasurement"
      },
      "IDeviceSlot": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "IDeviceSlot"
      },
      "IDeviceState": {
        "type": "object",
        "properties": {
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "lastAlertEventIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uuid"
            }
          },
          "lastInteractionDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastLocationEventId": {
            "type": "string",
            "format": "uuid"
          },
          "lastMeasurementEventIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uuid"
            }
          },
          "presenceMissingDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceState"
      },
      "IDeviceStateChange": {
        "type": "object",
        "properties": {
          "alternateId": {
            "type": "string"
          },
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "attribute": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceAssignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Measurement",
              "Location",
              "Alert",
              "CommandInvocation",
              "CommandResponse",
              "StateChange"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "newState": {
            "type": "string"
          },
          "previousState": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "IDeviceStateChange"
      },
      "IDeviceStatus": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceStatus"
      },
      "IDeviceStream": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "contentType": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "streamId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceStream"
      },
      "IDeviceType": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "containerPolicy": {
            "type": "string",
            "enum": [
              "Standalone",
              "Composite"
            ]
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "deviceElementSchema": {
            "originalRef": "IDeviceElementSchema",
            "$ref": "#/components/schemas/IDeviceElementSchema"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IDeviceType"
      },
      "IDeviceUnit": {
        "type": "object",
        "properties": {
          "deviceSlots": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceSlot",
              "$ref": "#/components/schemas/IDeviceSlot"
            }
          },
          "deviceUnits": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceUnit",
              "$ref": "#/components/schemas/IDeviceUnit"
            }
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "title": "IDeviceUnit"
      },
      "IElementNode": {
        "type": "object",
        "properties": {
          "attributeGroups": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "originalRef": "IAttributeNode",
              "$ref": "#/components/schemas/IAttributeNode"
            }
          },
          "deprecated": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "localName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "Element",
              "Attribute"
            ]
          },
          "onDeleteWarning": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "specializes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "title": "IElementNode"
      },
      "IElementRole": {
        "type": "object",
        "properties": {
          "childRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiple": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "permanent": {
            "type": "boolean"
          },
          "reorderable": {
            "type": "boolean"
          },
          "subtypeRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "IElementRole"
      },
      "IGrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "group": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          }
        },
        "title": "IGrantedAuthority"
      },
      "ILifecycleComponentState": {
        "type": "object",
        "properties": {
          "childComponentStates": {
            "type": "array",
            "items": {
              "originalRef": "ILifecycleComponentState",
              "$ref": "#/components/schemas/ILifecycleComponentState"
            }
          },
          "componentId": {
            "type": "string",
            "format": "uuid"
          },
          "componentName": {
            "type": "string"
          },
          "errorStack": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Initializing",
              "InitializationError",
              "Stopped",
              "StoppedWithErrors",
              "Starting",
              "Started",
              "StartedWithErrors",
              "Pausing",
              "Paused",
              "Stopping",
              "Terminating",
              "Terminated",
              "LifecycleError"
            ]
          }
        },
        "title": "ILifecycleComponentState"
      },
      "ILocation": {
        "type": "object",
        "properties": {
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "ILocation"
      },
      "IMicroserviceDetails": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "hostname": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "IMicroserviceDetails"
      },
      "ISchedule": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "triggerConfiguration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "triggerType": {
            "type": "string",
            "enum": [
              "SimpleTrigger",
              "CronTrigger"
            ]
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ISchedule"
      },
      "IScheduledJob": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jobConfiguration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "jobState": {
            "type": "string",
            "enum": [
              "Unsubmitted",
              "Active",
              "Complete"
            ]
          },
          "jobType": {
            "type": "string",
            "enum": [
              "CommandInvocation",
              "BatchCommandInvocation"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "scheduleToken": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IScheduledJob"
      },
      "IScriptMetadata": {
        "type": "object",
        "properties": {
          "activeVersion": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "versions": {
            "type": "array",
            "items": {
              "originalRef": "IScriptVersion",
              "$ref": "#/components/schemas/IScriptVersion"
            }
          }
        },
        "title": "IScriptMetadata"
      },
      "IScriptTemplate": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "IScriptTemplate"
      },
      "IScriptVersion": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "versionId": {
            "type": "string"
          }
        },
        "title": "IScriptVersion"
      },
      "ITenant": {
        "type": "object",
        "properties": {
          "authenticationToken": {
            "type": "string"
          },
          "authorizedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "datasetTemplateId": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "tenantTemplateId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ITenant"
      },
      "ITenantEngineState": {
        "type": "object",
        "properties": {
          "componentState": {
            "originalRef": "ILifecycleComponentState",
            "$ref": "#/components/schemas/ILifecycleComponentState"
          },
          "microservice": {
            "originalRef": "IMicroserviceDetails",
            "$ref": "#/components/schemas/IMicroserviceDetails"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "ITenantEngineState"
      },
      "ITenantTemplate": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "ITenantTemplate"
      },
      "IUser": {
        "type": "object",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "type": "string"
          },
          "hashedPassword": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Expired",
              "Locked"
            ]
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        },
        "title": "IUser"
      },
      "IVersion": {
        "type": "object",
        "properties": {
          "buildTimestamp": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "editionIdentifier": {
            "type": "string"
          },
          "versionIdentifier": {
            "type": "string"
          }
        },
        "title": "IVersion"
      },
      "IZone": {
        "type": "object",
        "properties": {
          "areaId": {
            "type": "string",
            "format": "uuid"
          },
          "borderColor": {
            "type": "string"
          },
          "bounds": {
            "type": "array",
            "items": {
              "originalRef": "ILocation",
              "$ref": "#/components/schemas/ILocation"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "fillColor": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "opacity": {
            "type": "number",
            "format": "double"
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "IZone"
      },
      "Initializers": {
        "type": "object",
        "properties": {
          "assetManagement": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deviceManagement": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scheduleManagement": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "Initializers"
      },
      "InstanceTopologySummary": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "icon": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "InstanceTopologySummary"
      },
      "JsonNode": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean"
          },
          "bigDecimal": {
            "type": "boolean"
          },
          "bigInteger": {
            "type": "boolean"
          },
          "binary": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "containerNode": {
            "type": "boolean"
          },
          "double": {
            "type": "boolean"
          },
          "float": {
            "type": "boolean"
          },
          "floatingPointNumber": {
            "type": "boolean"
          },
          "int": {
            "type": "boolean"
          },
          "integralNumber": {
            "type": "boolean"
          },
          "long": {
            "type": "boolean"
          },
          "missingNode": {
            "type": "boolean"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "ARRAY",
              "BINARY",
              "BOOLEAN",
              "MISSING",
              "NULL",
              "NUMBER",
              "OBJECT",
              "POJO",
              "STRING"
            ]
          },
          "null": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "object": {
            "type": "boolean"
          },
          "pojo": {
            "type": "boolean"
          },
          "short": {
            "type": "boolean"
          },
          "textual": {
            "type": "boolean"
          },
          "valueNode": {
            "type": "boolean"
          }
        },
        "title": "JsonNode"
      },
      "Location": {
        "type": "object",
        "properties": {
          "elevation": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "Location"
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "Parameter"
      },
      "Response": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          }
        },
        "title": "Response"
      },
      "ScheduleCreateRequest": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "triggerConfiguration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "triggerType": {
            "type": "string",
            "enum": [
              "SimpleTrigger",
              "CronTrigger"
            ]
          }
        },
        "title": "ScheduleCreateRequest"
      },
      "ScheduledJobCreateRequest": {
        "type": "object",
        "properties": {
          "jobConfiguration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "jobState": {
            "type": "string",
            "enum": [
              "Unsubmitted",
              "Active",
              "Complete"
            ]
          },
          "jobType": {
            "type": "string",
            "enum": [
              "CommandInvocation",
              "BatchCommandInvocation"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "scheduleToken": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "ScheduledJobCreateRequest"
      },
      "ScriptCloneRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          }
        },
        "title": "ScriptCloneRequest"
      },
      "ScriptCreateRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "ScriptCreateRequest"
      },
      "SearchProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "SearchProvider"
      },
      "TenantCreateRequest": {
        "type": "object",
        "properties": {
          "authenticationToken": {
            "type": "string"
          },
          "authorizedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "backgroundColor": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "datasetTemplateId": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "tenantTemplateId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "TenantCreateRequest"
      },
      "User": {
        "type": "object",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "type": "string"
          },
          "hashedPassword": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Expired",
              "Locked"
            ]
          },
          "token": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        },
        "title": "User"
      },
      "UserCreateRequest": {
        "type": "object",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "password": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Expired",
              "Locked"
            ]
          },
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "title": "UserCreateRequest"
      },
      "ZoneCreateRequest": {
        "type": "object",
        "properties": {
          "areaToken": {
            "type": "string"
          },
          "borderColor": {
            "type": "string"
          },
          "bounds": {
            "type": "array",
            "items": {
              "originalRef": "Location",
              "$ref": "#/components/schemas/Location"
            }
          },
          "fillColor": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "opacity": {
            "type": "number",
            "format": "double"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "ZoneCreateRequest"
      },
      "IChartEntry_double_": {
        "type": "object",
        "properties": {
          "measurementDate": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "IChartEntry«double»"
      },
      "IChartSeries_double_": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "originalRef": "IChartEntry«double»",
              "$ref": "#/components/schemas/IChartEntry_double_"
            }
          },
          "measurementId": {
            "type": "string"
          }
        },
        "title": "IChartSeries«double»"
      },
      "ISearchResults_DeviceAssignment_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "DeviceAssignment",
              "$ref": "#/components/schemas/DeviceAssignment"
            }
          }
        },
        "title": "ISearchResults«DeviceAssignment»"
      },
      "ISearchResults_IAreaType_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IAreaType",
              "$ref": "#/components/schemas/IAreaType"
            }
          }
        },
        "title": "ISearchResults«IAreaType»"
      },
      "ISearchResults_IArea_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IArea",
              "$ref": "#/components/schemas/IArea"
            }
          }
        },
        "title": "ISearchResults«IArea»"
      },
      "ISearchResults_IAssetType_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IAssetType",
              "$ref": "#/components/schemas/IAssetType"
            }
          }
        },
        "title": "ISearchResults«IAssetType»"
      },
      "ISearchResults_IAsset_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IAsset",
              "$ref": "#/components/schemas/IAsset"
            }
          }
        },
        "title": "ISearchResults«IAsset»"
      },
      "ISearchResults_IBatchElement_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IBatchElement",
              "$ref": "#/components/schemas/IBatchElement"
            }
          }
        },
        "title": "ISearchResults«IBatchElement»"
      },
      "ISearchResults_IBatchOperation_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IBatchOperation",
              "$ref": "#/components/schemas/IBatchOperation"
            }
          }
        },
        "title": "ISearchResults«IBatchOperation»"
      },
      "ISearchResults_ICustomerType_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "ICustomerType",
              "$ref": "#/components/schemas/ICustomerType"
            }
          }
        },
        "title": "ISearchResults«ICustomerType»"
      },
      "ISearchResults_ICustomer_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "ICustomer",
              "$ref": "#/components/schemas/ICustomer"
            }
          }
        },
        "title": "ISearchResults«ICustomer»"
      },
      "ISearchResults_IDeviceAlert_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceAlert",
              "$ref": "#/components/schemas/IDeviceAlert"
            }
          }
        },
        "title": "ISearchResults«IDeviceAlert»"
      },
      "ISearchResults_IDeviceAssignment_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceAssignment",
              "$ref": "#/components/schemas/IDeviceAssignment"
            }
          }
        },
        "title": "ISearchResults«IDeviceAssignment»"
      },
      "ISearchResults_IDeviceCommandInvocation_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceCommandInvocation",
              "$ref": "#/components/schemas/IDeviceCommandInvocation"
            }
          }
        },
        "title": "ISearchResults«IDeviceCommandInvocation»"
      },
      "ISearchResults_IDeviceCommandNamespace_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceCommandNamespace",
              "$ref": "#/components/schemas/IDeviceCommandNamespace"
            }
          }
        },
        "title": "ISearchResults«IDeviceCommandNamespace»"
      },
      "ISearchResults_IDeviceCommandResponse_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceCommandResponse",
              "$ref": "#/components/schemas/IDeviceCommandResponse"
            }
          }
        },
        "title": "ISearchResults«IDeviceCommandResponse»"
      },
      "ISearchResults_IDeviceCommand_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceCommand",
              "$ref": "#/components/schemas/IDeviceCommand"
            }
          }
        },
        "title": "ISearchResults«IDeviceCommand»"
      },
      "ISearchResults_IDeviceGroupElement_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceGroupElement",
              "$ref": "#/components/schemas/IDeviceGroupElement"
            }
          }
        },
        "title": "ISearchResults«IDeviceGroupElement»"
      },
      "ISearchResults_IDeviceGroup_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceGroup",
              "$ref": "#/components/schemas/IDeviceGroup"
            }
          }
        },
        "title": "ISearchResults«IDeviceGroup»"
      },
      "ISearchResults_IDeviceLocation_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceLocation",
              "$ref": "#/components/schemas/IDeviceLocation"
            }
          }
        },
        "title": "ISearchResults«IDeviceLocation»"
      },
      "ISearchResults_IDeviceMeasurement_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceMeasurement",
              "$ref": "#/components/schemas/IDeviceMeasurement"
            }
          }
        },
        "title": "ISearchResults«IDeviceMeasurement»"
      },
      "ISearchResults_IDeviceStateChange_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceStateChange",
              "$ref": "#/components/schemas/IDeviceStateChange"
            }
          }
        },
        "title": "ISearchResults«IDeviceStateChange»"
      },
      "ISearchResults_IDeviceState_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceState",
              "$ref": "#/components/schemas/IDeviceState"
            }
          }
        },
        "title": "ISearchResults«IDeviceState»"
      },
      "ISearchResults_IDeviceStatus_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceStatus",
              "$ref": "#/components/schemas/IDeviceStatus"
            }
          }
        },
        "title": "ISearchResults«IDeviceStatus»"
      },
      "ISearchResults_IDeviceStream_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceStream",
              "$ref": "#/components/schemas/IDeviceStream"
            }
          }
        },
        "title": "ISearchResults«IDeviceStream»"
      },
      "ISearchResults_IDeviceType_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDeviceType",
              "$ref": "#/components/schemas/IDeviceType"
            }
          }
        },
        "title": "ISearchResults«IDeviceType»"
      },
      "ISearchResults_IDevice_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IDevice",
              "$ref": "#/components/schemas/IDevice"
            }
          }
        },
        "title": "ISearchResults«IDevice»"
      },
      "ISearchResults_IGrantedAuthority_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IGrantedAuthority",
              "$ref": "#/components/schemas/IGrantedAuthority"
            }
          }
        },
        "title": "ISearchResults«IGrantedAuthority»"
      },
      "ISearchResults_IScheduledJob_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IScheduledJob",
              "$ref": "#/components/schemas/IScheduledJob"
            }
          }
        },
        "title": "ISearchResults«IScheduledJob»"
      },
      "ISearchResults_ISchedule_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "ISchedule",
              "$ref": "#/components/schemas/ISchedule"
            }
          }
        },
        "title": "ISearchResults«ISchedule»"
      },
      "ISearchResults_ITenant_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "ITenant",
              "$ref": "#/components/schemas/ITenant"
            }
          }
        },
        "title": "ISearchResults«ITenant»"
      },
      "ISearchResults_IUser_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IUser",
              "$ref": "#/components/schemas/IUser"
            }
          }
        },
        "title": "ISearchResults«IUser»"
      },
      "ISearchResults_IZone_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "IZone",
              "$ref": "#/components/schemas/IZone"
            }
          }
        },
        "title": "ISearchResults«IZone»"
      },
      "SearchResults_GrantedAuthority_": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "originalRef": "GrantedAuthority",
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          }
        },
        "title": "SearchResults«GrantedAuthority»"
      }
    }
  }
}